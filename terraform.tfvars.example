# Dataplex Universal Catalog - Configuration Example
# Copy this file to terraform.tfvars and customize for your environment

# ============================================================================
# REQUIRED VARIABLES
# ============================================================================

project_id = "your-gcp-project-id"

# ============================================================================
# OPTIONAL VARIABLES - Uncomment and modify as needed
# ============================================================================

# Region and Location
# region   = "asia-southeast1"  # Singapore
# region   = "us-central1"       # Iowa
# region   = "europe-west1"      # Belgium
# location = "asia-southeast1"

# ============================================================================
# FEATURE TOGGLES - Enable/Disable Modules
# ============================================================================

# enable_discover        = true
# enable_manage_metadata = true
# enable_manage_lakes    = true
# enable_govern          = true

# ============================================================================
# DISCOVER MODULE CONFIGURATION
# ============================================================================

discover_config = {
  enable_search         = true
  enable_taxonomy       = true
  enable_templates      = true
  search_scope          = "PROJECT"  # or "ORGANIZATION"
  search_result_limit   = 100
  taxonomy_display_name = "Enterprise Data Taxonomy"

  # Policy tags for data classification
  policy_tags = [
    "Highly-Confidential",
    "Confidential",
    "Restricted",
    "Internal",
    "Public",
    "PII",
    "PCI",
    "PHI",
    "Financial-Data"
  ]
}

# ============================================================================
# MANAGE METADATA MODULE CONFIGURATION
# ============================================================================

manage_metadata_config = {
  enable_catalog    = true
  enable_glossaries = true

  # Entry Groups for organizing data assets
  entry_groups = [
    {
      entry_group_id = "customer-data"
      display_name   = "Customer Data"
      description    = "Customer information and analytics"
    },
    {
      entry_group_id = "product-data"
      display_name   = "Product Data"
      description    = "Product catalog and inventory"
    },
    {
      entry_group_id = "financial-data"
      display_name   = "Financial Data"
      description    = "Financial transactions and reporting"
    },
    {
      entry_group_id = "operational-data"
      display_name   = "Operational Data"
      description    = "Operational metrics and logs"
    }
  ]

  # Business Glossaries with Terms
  glossaries = [
    {
      glossary_id  = "business-glossary"
      display_name = "Business Glossary"
      description  = "Enterprise business terminology"
      terms = [
        {
          term_id      = "customer"
          display_name = "Customer"
          description  = "An individual or organization that purchases products or services"
        },
        {
          term_id      = "revenue"
          display_name = "Revenue"
          description  = "Income generated from business operations"
        },
        {
          term_id      = "churn-rate"
          display_name = "Churn Rate"
          description  = "Percentage of customers who stop using the product"
        }
      ]
    },
    {
      glossary_id  = "technical-glossary"
      display_name = "Technical Glossary"
      description  = "Technical and data engineering terms"
      terms = [
        {
          term_id      = "etl"
          display_name = "ETL"
          description  = "Extract, Transform, Load process"
        },
        {
          term_id      = "data-lake"
          display_name = "Data Lake"
          description  = "Centralized repository for structured and unstructured data"
        }
      ]
    }
  ]
}

# ============================================================================
# MANAGE LAKES MODULE CONFIGURATION
# ============================================================================

manage_lakes_config = {
  enable_manage  = true
  enable_secure  = true
  enable_process = true

  # Data Lakes
  lakes = [
    {
      lake_id      = "analytics-lake"
      display_name = "Analytics Lake"
      description  = "Central data lake for analytics and machine learning"
      labels = {
        domain      = "analytics"
        criticality = "high"
      }
      zones = [
        {
          zone_id       = "raw-zone"
          type          = "RAW"
          display_name  = "Raw Data Zone"
          description   = "Landing zone for raw, unprocessed data"
          location_type = "SINGLE_REGION"
        },
        {
          zone_id       = "curated-zone"
          type          = "CURATED"
          display_name  = "Curated Data Zone"
          description   = "Validated and processed data ready for consumption"
          location_type = "SINGLE_REGION"
        }
      ]
    },
    {
      lake_id      = "operational-lake"
      display_name = "Operational Lake"
      description  = "Lake for operational and transactional data"
      labels = {
        domain      = "operations"
        criticality = "medium"
      }
      zones = [
        {
          zone_id       = "ops-raw"
          type          = "RAW"
          display_name  = "Operational Raw Zone"
          description   = "Raw operational data"
          location_type = "SINGLE_REGION"
        }
      ]
    },
    {
      lake_id      = "sandbox-lake"
      display_name = "Sandbox Lake"
      description  = "Experimental lake for data science and exploration"
      labels = {
        domain      = "sandbox"
        criticality = "low"
      }
      zones = [
        {
          zone_id       = "sandbox-zone"
          type          = "RAW"
          display_name  = "Sandbox Zone"
          location_type = "SINGLE_REGION"
        }
      ]
    }
  ]

  # IAM Bindings for Lake Access
  iam_bindings = [
    {
      lake_id = "analytics-lake"
      role    = "roles/dataplex.viewer"
      members = [
        "group:data-analysts@example.com",
        "group:business-users@example.com"
      ]
    },
    {
      lake_id = "analytics-lake"
      role    = "roles/dataplex.editor"
      members = [
        "group:data-engineers@example.com"
      ]
    },
    {
      lake_id = "sandbox-lake"
      role    = "roles/dataplex.admin"
      members = [
        "group:data-scientists@example.com"
      ]
    }
  ]

  # Spark Data Processing Jobs
  spark_jobs = [
    {
      job_id       = "customer-data-transformation"
      lake_id      = "analytics-lake"
      display_name = "Customer Data Transformation"
      description  = "Transform raw customer data to curated format"
      main_class   = "com.example.transformations.CustomerDataTransform"
      main_jar_uri = "gs://your-bucket/jars/customer-transform.jar"
      args         = ["--input=raw", "--output=curated"]
    },
    {
      job_id       = "product-aggregation"
      lake_id      = "analytics-lake"
      display_name = "Product Aggregation Job"
      description  = "Aggregate product metrics for reporting"
      main_class   = "com.example.aggregations.ProductAggregation"
      main_jar_uri = "gs://your-bucket/jars/product-aggregation.jar"
      args         = ["--window=daily"]
    }
  ]
}

# ============================================================================
# GOVERN MODULE CONFIGURATION
# ============================================================================

govern_config = {
  enable_profiling  = true
  enable_quality    = true
  enable_monitoring = true

  # Data Quality Scans with Rules
  quality_scans = [
    {
      scan_id      = "customer-quality-scan"
      lake_id      = "analytics-lake"
      display_name = "Customer Data Quality Scan"
      description  = "Comprehensive quality checks for customer data"
      data_source  = "//bigquery.googleapis.com/projects/YOUR_PROJECT/datasets/customers/tables/customer_master"

      rules = [
        {
          rule_type  = "NON_NULL"
          column     = "customer_id"
          threshold  = 1.0
          dimension  = "COMPLETENESS"
        },
        {
          rule_type  = "UNIQUENESS"
          column     = "customer_id"
          threshold  = 1.0
          dimension  = "UNIQUENESS"
        },
        {
          rule_type  = "NON_NULL"
          column     = "email"
          threshold  = 0.99
          dimension  = "COMPLETENESS"
        },
        {
          rule_type  = "REGEX"
          column     = "email"
          threshold  = 0.98
          dimension  = "VALIDITY"
        },
        {
          rule_type  = "RANGE"
          column     = "age"
          threshold  = 0.95
          dimension  = "VALIDITY"
        },
        {
          rule_type  = "SET"
          column     = "status"
          threshold  = 1.0
          dimension  = "VALIDITY"
        }
      ]
    },
    {
      scan_id      = "product-quality-scan"
      lake_id      = "analytics-lake"
      display_name = "Product Data Quality Scan"
      description  = "Quality validation for product catalog"
      data_source  = "//bigquery.googleapis.com/projects/YOUR_PROJECT/datasets/products/tables/product_catalog"

      rules = [
        {
          rule_type  = "NON_NULL"
          column     = "product_id"
          threshold  = 1.0
          dimension  = "COMPLETENESS"
        },
        {
          rule_type  = "NON_NULL"
          column     = "product_name"
          threshold  = 1.0
          dimension  = "COMPLETENESS"
        },
        {
          rule_type  = "RANGE"
          column     = "price"
          threshold  = 0.99
          dimension  = "VALIDITY"
        }
      ]
    },
    {
      scan_id      = "financial-quality-scan"
      lake_id      = "analytics-lake"
      display_name = "Financial Data Quality Scan"
      description  = "Critical quality checks for financial transactions"
      data_source  = "//bigquery.googleapis.com/projects/YOUR_PROJECT/datasets/finance/tables/transactions"

      rules = [
        {
          rule_type  = "NON_NULL"
          column     = "transaction_id"
          threshold  = 1.0
          dimension  = "COMPLETENESS"
        },
        {
          rule_type  = "NON_NULL"
          column     = "amount"
          threshold  = 1.0
          dimension  = "COMPLETENESS"
        },
        {
          rule_type  = "RANGE"
          column     = "amount"
          threshold  = 1.0
          dimension  = "VALIDITY"
        }
      ]
    }
  ]

  # Data Profiling Scans
  profiling_scans = [
    {
      scan_id      = "customer-profile-scan"
      lake_id      = "analytics-lake"
      display_name = "Customer Data Profile"
      description  = "Statistical profiling of customer data"
      data_source  = "//bigquery.googleapis.com/projects/YOUR_PROJECT/datasets/customers/tables/customer_master"
    },
    {
      scan_id      = "product-profile-scan"
      lake_id      = "analytics-lake"
      display_name = "Product Data Profile"
      description  = "Statistical profiling of product catalog"
      data_source  = "//bigquery.googleapis.com/projects/YOUR_PROJECT/datasets/products/tables/product_catalog"
    },
    {
      scan_id      = "sales-profile-scan"
      lake_id      = "analytics-lake"
      display_name = "Sales Data Profile"
      description  = "Statistical profiling of sales transactions"
      data_source  = "//bigquery.googleapis.com/projects/YOUR_PROJECT/datasets/sales/tables/sales_transactions"
    }
  ]
}

# ============================================================================
# LABELS AND TAGS
# ============================================================================

# Global labels applied to all resources
labels = {
  environment  = "production"
  managed_by   = "terraform"
  project      = "dataplex-universal-catalog"
  cost_center  = "data-platform"
  owner        = "data-engineering-team"
  compliance   = "gdpr"
}

# Additional tags
tags = {
  data_classification = "internal"
  backup_required     = "true"
  monitoring_enabled  = "true"
}
